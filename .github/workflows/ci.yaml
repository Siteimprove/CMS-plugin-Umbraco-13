name: CI

on:
    push:
        branches: ["master"]
    pull_request:
        branches: ["master"]

env:
    VERSION: 0.1.${{ github.run_number }}.${{ github.run_attempt }}

jobs:
    deploy-nuget:
        name: Build, upload artifact and deploy
        runs-on: windows-latest
        env:
            DOTNET_INSTALL_DIR: "./.dotnet"
        steps:
            - uses: actions/checkout@v3
            - uses: ./.github/actions/env-setup

            - name: Setup .NET
              uses: actions/setup-dotnet@v3
              with:
                  dotnet-version: 8.0.x

            - name: Build .NET
              run: dotnet build -c Release -p:GeneratePackageOnBuild=false

            - name: Pack NuGet package
              run: dotnet pack -c Release -p:Version="${{ env.VERSION }}" -p:InformationalVersion="${{ env.LONG_VERSION }}"

            - name: Create Github release
              uses: actions/create-release@v1
              id: create_release
              env:
                  GITHUB_TOKEN: ${{ github.token }}
              with:
                  prerelease: ${{ env.IS_PRERELEASE }}
                  release_name: ${{ env.LONG_VERSION }}
                  tag_name: ${{ env.LONG_VERSION }}

            - name: Get NuGet package name
              id: get_package_name
              run: echo "PACKAGE_NAME=$(Get-ChildItem -Path .\bin\Release\*.nupkg | Select-Object -ExpandProperty Name)" >> $env:GITHUB_OUTPUT

            - name: Upload artifact
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ github.token }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./bin/Release/${{ steps.get_package_name.outputs.PACKAGE_NAME }}
                  asset_name: ${{ steps.get_package_name.outputs.PACKAGE_NAME }}
                  asset_content_type: application/octet-stream

            - name: Push NuGet package to NuGet.org
              run: dotnet nuget push ./bin/Release/*.nupkg --api-key ${{ secrets.NUGET_ORG_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate

